#!/bin/bash

TERM_WIDTH=$(tput cols)
if [ "$TERM_WIDTH" -ge 80 ]; then
    BOX_WIDTH=75
else
    BOX_WIDTH=$(($TERM_WIDTH - 5))
fi

RED="\033[1;31m"
ORANGE="\033[38;5;208m"
WHITE="\033[38;5;231m"
YELLOW="\033[38;5;226m"
BRIGHT_RED="\033[38;5;196m"
GREEN="\033[38;5;46m"
RESET="\033[0m"

draw_line() {
    local content="$1"
    local visible_length=$(echo -e "$content" | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,3})*)?[mGK]//g" | wc -c)
    local padding=$((BOX_WIDTH - visible_length + 1))
    
    if [ "$padding" -lt 0 ]; then
        padding=0
    fi
    
    local padding_spaces=$(printf "%${padding}s" "")
    echo -e "${RED}║${content}${padding_spaces}${RED}║"
}

clear

HOSTNAME=$(hostname | tr '[:lower:]' '[:upper:]')
IP_ADDRESS=$(hostname -I | awk '{print $1}')
OS=$(lsb_release -d 2>/dev/null | cut -f2 || echo "Unknown OS")
KERNEL=$(uname -r)
CPU=$(grep 'model name' /proc/cpuinfo 2>/dev/null | head -1 | cut -d':' -f2 | sed 's/^[ \t]*//' || echo "Unknown CPU")
MEMORY=$(free -m 2>/dev/null | grep Mem | awk '{printf "%.1f", $2/1024}' || echo "Unknown")
DISK=$(df -h / 2>/dev/null | awk 'NR==2 {print $2}' || echo "Unknown")
UPDATE_DATE=$(date +"%Y-%m-%d")
UPDATE_TIME=$(date +"%H:%M:%S")
UPTIME=$(uptime -p 2>/dev/null | sed 's/up //' || echo "Unknown")

echo -e "${RED}╔$(printf '═%.0s' $(seq 1 $BOX_WIDTH))╗"

draw_line ""

draw_line "${ORANGE}  ███████╗██╗██╗     ██████╗  █████╗     ███████╗███████╗ ██████╗██╗   ██╗██████╗ ███████╗"
draw_line "${ORANGE}  ██╔════╝██║██║     ██╔══██╗██╔══██╗    ██╔════╝██╔════╝██╔════╝██║   ██║██╔══██╗██╔════╝"
draw_line "${ORANGE}  █████╗  ██║██║     ██║  ██║███████║    ███████╗█████╗  ██║     ██║   ██║██████╔╝█████╗  "
draw_line "${ORANGE}  ██╔══╝  ██║██║     ██║  ██║██╔══██║    ╚════██║██╔══╝  ██║     ██║   ██║██╔══██╗██╔══╝  "
draw_line "${ORANGE}  ██║     ██║███████╗██████╔╝██║  ██║    ███████║███████╗╚██████╗╚██████╔╝██║  ██║███████╗"
draw_line "${ORANGE}  ╚═╝     ╚═╝╚══════╝╚═════╝ ╚═╝  ╚═╝    ╚══════╝╚══════╝ ╚═════╝ ╚═════╝ ╚═╝  ╚═╝╚══════╝"

draw_line ""

echo -e "${RED}╠$(printf '═%.0s' $(seq 1 $BOX_WIDTH))╣"

draw_line ""

draw_line "  ${WHITE}[${BRIGHT_RED}!${WHITE}] ${ORANGE}VITEJTE NA SERVERU: ${WHITE}$HOSTNAME ${ORANGE}@ ${WHITE}$IP_ADDRESS"

draw_line ""

draw_line "  ${BRIGHT_RED}▀▄▀▄▀▄ ${YELLOW}VAROVANI: TENTO SYSTEM JE PLNE MONITOROVAN ${BRIGHT_RED}▄▀▄▀▄▀"
draw_line "  ${ORANGE}Vsechny aktivity jsou zaznamenavany a analyzovany"
draw_line "  ${ORANGE}Neautorizovany pristup je trestny podle § 230 trestniho zakona"

draw_line ""

draw_line "  ${WHITE}Systemove informace:"
draw_line "  ${ORANGE}- OS: ${WHITE}$OS"
draw_line "  ${ORANGE}- Kernel: ${WHITE}$KERNEL"
draw_line "  ${ORANGE}- CPU: ${WHITE}$CPU"
draw_line "  ${ORANGE}- Pamet: ${WHITE}${MEMORY} GB"
draw_line "  ${ORANGE}- Diskovy prostor: ${WHITE}$DISK"

draw_line ""

draw_line "  ${ORANGE}Posledni aktualizace: ${WHITE}$UPDATE_DATE $UPDATE_TIME"
draw_line "  ${ORANGE}Uptime: ${WHITE}$UPTIME"

draw_line ""

draw_line "  ${WHITE}[${BRIGHT_RED}✘${WHITE}] ${ORANGE}fildaSecure monitoring active               ${GREEN}[RUNNING]"
draw_line "  ${WHITE}[${BRIGHT_RED}✘${WHITE}] ${ORANGE}IDS/IPS protection                          ${GREEN}[ENABLED]"
draw_line "  ${WHITE}[${BRIGHT_RED}✘${WHITE}] ${ORANGE}Anomaly detection                           ${GREEN}[ENABLED]"

draw_line ""

echo -e "${RED}╚$(printf '═%.0s' $(seq 1 $BOX_WIDTH))╝${RESET}"